// <auto-generated />
using System;
using DistributedSystem.Product.Infrastructure.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DistributedSystem.Product.MigrationService.Migrations
{
    [DbContext(typeof(ProductSqlDbContext))]
    [Migration("20240826194844_RemovesStockLeve")]
    partial class RemovesStockLeve
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DistributedSystem.Product.Core.ProductAggregate.Product", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset?>("Created")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasPrecision(6, 2)
                        .HasColumnType("decimal(6,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("SaleOfferId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset?>("Updated")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("SaleOfferId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("DistributedSystem.Product.Core.ProductAggregate.SaleOffer", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Discount")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("SaleOffer");
                });

            modelBuilder.Entity("DistributedSystem.Product.Core.ProductAggregate.Product", b =>
                {
                    b.HasOne("DistributedSystem.Product.Core.ProductAggregate.SaleOffer", "SaleOffer")
                        .WithMany()
                        .HasForeignKey("SaleOfferId");

                    b.Navigation("SaleOffer");
                });
#pragma warning restore 612, 618
        }
    }
}
